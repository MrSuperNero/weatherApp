{"version":3,"sources":["App.js","index.js"],"names":["weatherAPI","App","useState","query","setQuery","weather","setWeather","className","main","temp","id","name","type","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","result","json","data","console","log","icon","faSun","faCloudSun","faCloudRain","faCloudShowersHeavy","faSnowflake","faCloud","size","Math","ceil","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","sys","country","ReactDOM","render","document","querySelector"],"mappings":"kQAMMA,EACG,mCADHA,EAEO,2CA4FEC,MAzFf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACJC,EADI,KACGC,EADH,OAEmBF,mBAAS,IAF5B,mBAEJG,EAFI,KAEKC,EAFL,KA2CX,OACI,yBAAKC,UACuB,oBAAhBF,EAAQG,KACZH,EAAQG,KAAKC,KAAO,GACW,UAA5BJ,EAAQA,QAAQ,GAAGG,KAChB,YACA,aACJ,WACJ,OACF,8BACI,yBAAKD,UAAU,cACX,kBAAC,IAAD,CAAaG,GAAG,OAAOC,KAAK,WAC5B,2BACIC,KAAK,OACLL,UAAU,aACVM,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIX,EAASW,EAAEC,OAAOC,QACjCA,MAAOd,EACPe,WAzDL,SAAAC,GACO,UAAdA,EAAMC,KACNC,MAAM,GAAD,OAAIrB,EAAJ,qBAAmCG,EAAnC,iCAAiEH,IACjEsB,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GACFnB,EAAWmB,GACXrB,EAAS,IACTsB,QAAQC,IAAIF,UAsDS,oBAAhBpB,EAAQG,KACjB,yBAAKD,UAAU,QACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CACIqB,KAzCY,UAA5BvB,EAAQA,QAAQ,GAAGG,KACZqB,IAC4B,WAA5BxB,EAAQA,QAAQ,GAAGG,KACnBsB,IAC4B,SAA5BzB,EAAQA,QAAQ,GAAGG,MAA+C,YAA5BH,EAAQA,QAAQ,GAAGG,KACzDuB,IAC4B,iBAA5B1B,EAAQA,QAAQ,GAAGG,KACnBwB,IAC4B,SAA5B3B,EAAQA,QAAQ,GAAGG,KACnByB,IAEAC,IA+BSC,KAAK,OAET,yBAAK5B,UAAU,SACX,yBAAKA,UAAU,QAAQ6B,KAAKC,KAAKhC,EAAQG,KAAKC,MAA9C,WACA,yBAAKF,UAAU,WAAWF,EAAQA,QAAQ,GAAGG,QAIrD,yBAAKD,UAAU,gBACX,yBAAKA,UAAU,QA/Df,SAAC+B,GACjB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAJS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBI,EAAjB,YAA0BF,EAA1B,aAAmCI,GAuDIE,CAAY,IAAIC,OACvC,yBAAKzC,UAAU,YAAYF,EAAQM,KAAnC,KAA2CN,EAAQ4C,IAAIC,WAG1D,MC1FrBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.ab2c1a77.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './css/app.css';\nimport FontAwesome from 'react-fontawesome';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudSun, faCloud, faCloudRain, faCloudShowersHeavy, faSnowflake } from '@fortawesome/free-solid-svg-icons';\n\nconst weatherAPI = {\n    key: \"ae1a13c2989addd4beba02438e8e456d\",\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n\n    const search = event => {\n        if (event.key === \"Enter\") {\n            fetch(`${weatherAPI.baseURL}weather?q=${query}&units=imperial&APPID=${weatherAPI.key}`)\n                .then(result => result.json())\n                .then(data => {\n                    setWeather(data);\n                    setQuery(\"\");\n                    console.log(data)\n                });\n        }\n    }\n\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n            days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],  \n            day = days[d.getDay()],\n            date = d.getDate(),\n            month = months[d.getMonth()],\n            year = d.getFullYear();\n\n        return `${day} ${month} ${date}, ${year}`;\n    }\n\n    const weatherIcon = () => {\n        if (weather.weather[0].main === \"Clear\") {\n            return faSun;\n        } else if (weather.weather[0].main === \"Clouds\") {\n            return faCloudSun;\n        } else if (weather.weather[0].main === \"Rain\" || weather.weather[0].main === \"Drizzle\") {\n            return faCloudRain;\n        } else if (weather.weather[0].main === \"Thunderstorm\") {\n            return faCloudShowersHeavy;\n        } else if (weather.weather[0].main === \"Snow\") {\n            return faSnowflake;\n        } else {\n            return faCloud;\n        }\n    }\n\n    return (\n        <div className={\n            (typeof weather.main != \"undefined\") \n            ? ((weather.main.temp > 50) \n                ? (weather.weather[0].main === \"Clear\")\n                    ? 'app sunny'\n                    : 'app cloudy' \n                : 'app snow') \n            : 'app'}>\n            <main>\n                <div className=\"search-box\">\n                    <FontAwesome id=\"icon\" name=\"search\" />\n                    <input\n                        type=\"text\"\n                        className=\"search-bar\"\n                        placeholder=\"Search for city\"\n                        onChange={e => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n                </div>\n\n                {(typeof weather.main != \"undefined\") ? (\n                <div className=\"data\">\n                    <div className=\"weather-box\">\n                        <FontAwesomeIcon \n                            icon={weatherIcon()} \n                            size=\"4x\"\n                            />\n                        <div className=\"stats\">\n                            <div className=\"temp\">{Math.ceil(weather.main.temp)}ËšF</div>\n                            <div className=\"weather\">{weather.weather[0].main}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"location-box\">\n                        <div className=\"date\">{dateBuilder(new Date())}</div>\n                        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n                    </div>\n                </div>\n                ) : (\"\")}\n            </main>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector(\"#root\"))"],"sourceRoot":""}